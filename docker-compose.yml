networks:
  app-network:
    driver: bridge

  internal-network:
    internal: true

  iam-service-network:
    internal: true

  integrations-service-network:
      internal: true

services:

  web-app:
    extends:
      file: ./frontend/web_app/docker-compose.base.yml
      service: web-app
    ports:
      - "5001:80"

  landing-page:
    extends:
      file: ./frontend/landing_page/docker-compose.base.yml
      service: landing-page
    ports:
      - "5000:80"

  gateway:
    image: kong:latest
    environment:
      KONG_DATABASE: "off"
      KONG_DECLARATIVE_CONFIG: "/kong.yml"
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001, 0.0.0.0:8444 ssl
      KONG_ADMIN_GUI_URL: http://localhost:8002
    volumes:
      - ./kong.yml:/kong.yml
    ports:
      - "8000:8000"
      - "8443:8443"
      - "8001:8001"
      - "8002:8002"
      - "8444:8444"
    restart: unless-stopped
    networks:
      - internal-network
      - app-network

  iam-service-db:
    extends:
      file: ./backend/iam_service/docker-compose.base.yml
      service: iam-service-db
    environment:
      POSTGRES_USER: test
      POSTGRES_PASSWORD: test
      POSTGRES_DB: iam
    networks:
      - iam-service-network

  iam-service:
    extends:
      file: ./backend/iam_service/docker-compose.base.yml
      service: iam-service
    environment:
      POSTGRES_URL: "postgresql://test:test@iam-service-db:5432/iam"
      REFRESH_TOKEN_SECRET: test_refresh
      ACCESS_TOKEN_SECRET: test_access
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000
    networks:
        - iam-service-network
        - internal-network
        - app-network

  integrations-service-token-db:
    extends:
      file: ./backend/integrations_service/docker-compose.base.yml
      service: integrations-service-token-db
    networks:
      - integrations-service-network

  integrations-sync-db:
    extends:
      file: ./backend/integrations_service/docker-compose.base.yml
      service: integrations-sync-db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: sync
    networks:
      - integrations-service-network

  integrations-service:
    extends:
      file: ./backend/integrations_service/docker-compose.base.yml
      service: integrations-service
    environment:
      ENV: "prod"
      TOKEN_DATABASE_CONNECTION_STRING: "redis://:redispass@integrations-service-token-db:6379/0"
      SYNC_DATABASE_CONNECTION_STRING: "mongodb://root:example@integrations-sync-db:27017"
      TIKTOK_TOKEN_URI: https://open.tiktokapis.com/v2/oauth/token/
      TIKTOK_REDIRECT_URI: https://concrete-troll-brightly.ngrok-free.app/dashboard/integrations/tiktok/callback
      TIKTOK_CLIENT_KEY: sbawgik9wknh769zea
      TIKTOK_CLIENT_SECRET: ntnIeAlvnKPC6tTIXTQpsi4kws3D7ewv
      IAM_SERVICE_URL: "http://iam-service:8000/iam"
    command: uvicorn app.main:app --host 0.0.0.0 --port 8001
    networks:
      - integrations-service-network
      - internal-network
      - app-network
